Snippets: myGDXGame
/* Render spikes*/
		Material lineColor = new Material(ColorAttribute.createDiffuse(Color.valueOf("ffffff")));
	
		Vector3 p1;
		partBuilder = modelBuilder.part("tile", GL20.GL_LINES, VertexAttributes.Usage.Position, lineColor);
		for(int i = 0; i < planet.tiles.size; i++) {
			if(i % tileLimit == 0){
				partBuilder = modelBuilder.part("tile", GL20.GL_LINES, VertexAttributes.Usage.Position, lineColor);
			}
			p1 = planet.tiles.get(i).centroid;
			partBuilder.line(p1.scl(1.0f), p1.cpy().scl(1.0f + 0.00000000000000125f*planet.tiles.get(i).power.getValue()));
		}
    
/* Render sun rays */
		Material lineColor = new Material(ColorAttribute.createDiffuse(Color.valueOf("ffffff")));

		Vector3 p1;
		partBuilder = modelBuilder.part("tile", GL20.GL_LINES, VertexAttributes.Usage.Position, lineColor);
        for(int i = 0; i < planet.tiles.size; i++) {
            if(i % tileLimit == 0){
                partBuilder = modelBuilder.part("tile", GL20.GL_LINES, VertexAttributes.Usage.Position, lineColor);
            }
                p1 = planet.tiles.get(i).centroid;
				partBuilder.line(p1.scl(1.0f), p1.cpy().scl(1.0f + 0.00000000000000125f*planet.tiles.get(i).power.getValue()));
        }
        

/* Render wireframe */
        Material lineColor = new Material(ColorAttribute.createDiffuse(Color.valueOf("202020")));
        partBuilder = modelBuilder.part("tile", GL20.GL_LINES, VertexAttributes.Usage.Position, lineColor);
        Vector3 p1;
        Vector3 p2;
        for(int i = 0; i < planet.tiles.size; i++) {
            if(i % tileLimit == 0){
                partBuilder = modelBuilder.part("tile", GL20.GL_LINES, VertexAttributes.Usage.Position, lineColor);
            }
            int numPts = planet.tiles.get(i).pts.size;
            for (int j = 0; j < numPts; j++) {
                int k = j + 1;
                if (k == numPts) k = 0;
                p1 = planet.tiles.get(i).pts.get(j).cpy();
                p2 = planet.tiles.get(i).pts.get(k).cpy();
                if(planet.tiles.get(i).getNbr(p1, p2).drawn)
                    continue;
                else
                    partBuilder.line(p1.scl(1.000008f), p2.scl(1.000008f));
            }
            planet.tiles.get(i).drawn = true;
        }